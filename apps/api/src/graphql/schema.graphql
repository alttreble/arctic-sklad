scalar Cursor

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: Cursor
  endCursor: Cursor
}

type Item {
  id: Int!
  createdAt: String!
  updatedAt: String!
  name: String!
  description: String
  expirationDate: String
}

type ItemEdge {
  node: Item
  cursor: Cursor!
}

type ItemConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [ItemEdge]
}

enum TodoOrderField {
  id
  createdAt
  updatedAt
  name
  expirationDate
}

enum OrderDirection {
  asc
  desc
}

input ItemOrderByInput {
  direction: OrderDirection = asc
  field: TodoOrderField! = id
}

input AddItemInput {
  name: String!
  description: String
  expirationDate: String
}

input ItemFiltersInput {
  name: String
  expirationDate: String
}

type Query {
    items(
      after: Cursor
      first: Int
      before: Cursor
      last: Int
      orderBy: ItemOrderByInput
      filter: ItemFiltersInput
    ): ItemConnection!
}

type Mutation {
  addItem(input: AddItemInput): Item
}
